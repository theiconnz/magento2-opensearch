version: '3'

services:
  webmage2:
    build:
      context: docker/apache
      args:
        PROJECT_DOMAIN: ${PROJECT_DOMAIN}
        PROJECT_ROOT: ${PROJECT_ROOT}
    depends_on:
      - phpmage2
      - mysqlmage2
    ports:
      - ${PORT_NGINX}:80
    volumes:
      - ${PROJECT_PATH}:/var/www/project:cached
      - ./var/data/httpd/logs:/usr/local/apache2/logs
    links:
      - phpmage2
    networks:
      - mage2


  phpmage2:
    build:
      context: docker/php81
      args:
        USER_ID: ${USER_ID}
        PHP_TIMEZONE: ${PHP_TIMEZONE}
    links:
      - mysqlmage2
    volumes:
      - ${PROJECT_PATH}:/var/www/project
      - ./var/data/php/workspace:/var/www/workspace
      - /var/run/docker.sock:/var/run/docker.sock

    environment:
      HISTFILE: /var/www/workspace/.bash_history
      PROMPT_COMMAND: history -a
      XDEBUG_CONFIG: remote_host=host.docker.internal
    depends_on:
      - mysqlmage2
    env_file: .env
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - mage2


  phpmyadminmage2:
    image: phpmyadmin/phpmyadmin
    restart: always
    ports:
      - '${PORT_PHPMYADMIN}:80'
    depends_on:
      - mysqlmage2
    environment:
      PMA_HOST: mysqlmage2
    networks:
      - mage2

  opensearch-node1: # This is also the hostname of the container within the Docker network (i.e. https://opensearch-node1/)
    image: opensearchproject/opensearch:1 # Specifying the latest 1.x available image - modify if you want a specific version
    container_name: opensearch-node1
    environment:
      - cluster.name=opensearch-cluster # Name the cluster
      - node.name=opensearch-node1 # Name the node that will run in this container
      - discovery.seed_hosts=opensearch-node1 # Nodes to look for when discovering the cluster
      - cluster.initial_master_nodes=opensearch-node1 # Nodes eligible to serve as master
      - bootstrap.memory_lock=true # Disable JVM heap memory swapping
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m" # Set min and max JVM heap sizes to at least 50% of system RAM
      - "DISABLE_INSTALL_DEMO_CONFIG=true" # Prevents execution of bundled demo script which installs demo certificates and security configurations to OpenSearch
      - "DISABLE_SECURITY_PLUGIN=true" # Disables security plugin
    ulimits:
      memlock:
        soft: -1 # Set memlock to unlimited (no soft or hard limit)
        hard: -1
      nofile:
        soft: 65536 # Maximum number of open files for the opensearch user - set to at least 65536
        hard: 65536
    volumes:
      - ./var/opensearch-data1:/usr/share/opensearch/data # Creates volume called opensearch-data1 and mounts it to the container
      #- ./custom-opensearch.yml:/usr/share/opensearch/config/opensearch.yml
    ports:
      - 9200:9200 # REST API
      - 9600:9600 # Performance Analyzer
    networks:
      - mage2 # All of the containers will join the same Docker bridge network

  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:1 # Make sure the version of opensearch-dashboards matches the version of opensearch installed on other nodes
    container_name: opensearch-dashboards
    ports:
      - 5601:5601 # Map host port 5601 to container port 5601
    expose:
      - "5601" # Expose port 5601 for web access to OpenSearch Dashboards
    environment:
      - 'OPENSEARCH_HOSTS=["http://opensearch-node1:9200","http://opensearch-node2:9200"]'
      - "DISABLE_SECURITY_DASHBOARDS_PLUGIN=true" # disables security dashboards plugin in OpenSearch Dashboards
    networks:
      - mage2


  mysqlmage2:
      image: ${MYSQL_IMAGE}
      container_name: mysql-mage2store-80
      restart: always
      command: --max_allowed_packet=75005856
      environment:
        - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
        - MYSQL_DATABASE=${MYSQL_DATABASE}
      volumes:
        - ${PROJECT_SQL_DB}:/var/lib/mysql
        - ${PROJECT_SQL_PATH}:/docker-entrypoint-initdb.d
      ports:
        - '${PORT_MYSQL}:3306'
      networks:
        - mage2

  redis6mage2:
    image: redis:6.0-alpine
    container_name: redis6mage2
    command: redis-server --save 60 1 --loglevel warning
    ports:
      - 6379:6379
    volumes:
      - "./var/redis-cache:/data"
    networks:
      - mage2


volumes:
  opensearch-data1:
  opensearch-data2:


networks:
  mage2:
    name: mage2store
    external: true
